//
// Base styles
// --------------------------------------------------
// Use box sizing on all the things!
* {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

html {
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    height: calc(100% + env(safe-area-inset-top));
    height: calc(100% + constant(safe-area-inset-top));
}

// We fix position the body and scroll `.content`.
body {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    font-family: $font-family-default;
    font-size: $font-size-default;
    line-height: $line-height-default;
    color: #000;
    background-color: $ratchet-color-background;
}

// Universal link styling
a {
    color: $primary-color;
    text-decoration: none;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0); // Removes the dark touch outlines on links in webkit browsers.
    &:active {
        color: darken($primary-color, 10%);
    }
}

// Wrapper to be used around all content not in .bar-title and .bar-tab
.content {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    overflow: auto;
    padding-top: calc(($bar-base-height*1.5) + constant(safe-area-inset-top));
    padding-top: calc(($bar-base-height*1.5) + env(safe-area-inset-top));
    background-color: $ratchet-color-background;
    -webkit-overflow-scrolling: touch;
}

// Hack to force all relatively and absolutely positioned elements still render while scrolling
// Note: This is a bug for "-webkit-overflow-scrolling: touch"
.content>* {
    @include transform(translateZ(0));
}

// Pad top/bottom of content so it doesn't hide behind bars.
// Note: For these to work, content must come after both bars in the markup
.bar-nav~.content {
    padding-top: calc(($bar-base-height*3) + constant(safe-area-inset-top));
    padding-top: calc(($bar-base-height*3) + env(safe-area-inset-top));
}

.bar-dash~.content {
    padding-top: calc(65px + constant(safe-area-inset-top));
    /* < ios 11.2 */
    padding-top: calc(65px + env(safe-area-inset-top));
    /* > ios 11.2 */
}

.bar-header-secondary~.content {
    padding-top: calc(($bar-base-height*2) + constant(safe-area-inset-top));
    /* < ios 11.2 */
    padding-top: calc(($bar-base-height*2) + env(safe-area-inset-top));
    /* > ios 11.2 */
}

// Footer bar padding
.bar-footer~.content {
    padding-bottom: calc($bar-base-height + constant(safe-area-inset-bottom));
    padding-bottom: calc($bar-base-height + env(safe-area-inset-bottom));
}

.bar-footer-secondary~.content {
    padding-bottom: calc(($bar-base-height*2) + constant(safe-area-inset-bottom));
    padding-bottom: calc(($bar-base-height*2) + env(safe-area-inset-bottom));
}

// Tab bar padding
.bar-tab~.content {
    padding-bottom: calc($bar-tab-height + constant(safe-area-inset-bottom));
    padding-bottom: calc($bar-tab-height + env(safe-area-inset-bottom));
}

.bar-footer-secondary-tab~.content {
    padding-bottom: calc($bar-tab-height + $bar-base-height + constant(safe-area-inset-bottom));
    padding-bottom: calc($bar-tab-height + $bar-base-height + env(safe-area-inset-bottom));
}

// Utility classes
.content-padded {
    margin: $bar-side-spacing;
}

.text-center {
    text-align: center;
}

.pull-left {
    float: left;
}

.pull-right {
    float: right;
}

.clearfix {
    @include clearfix();
}